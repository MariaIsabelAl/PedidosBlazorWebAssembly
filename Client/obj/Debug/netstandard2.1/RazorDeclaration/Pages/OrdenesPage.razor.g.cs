#pragma checksum "C:\Aplicada2\PedidosBlazorWebAssembly\Client\Pages\OrdenesPage.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b3b4c6dd542c0154d23dcd1e9b78a5f9245f677a"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace PedidosBlazorWebAssembly.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Aplicada2\PedidosBlazorWebAssembly\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Aplicada2\PedidosBlazorWebAssembly\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Aplicada2\PedidosBlazorWebAssembly\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Aplicada2\PedidosBlazorWebAssembly\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Aplicada2\PedidosBlazorWebAssembly\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Aplicada2\PedidosBlazorWebAssembly\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Aplicada2\PedidosBlazorWebAssembly\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Aplicada2\PedidosBlazorWebAssembly\Client\_Imports.razor"
using PedidosBlazorWebAssembly.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Aplicada2\PedidosBlazorWebAssembly\Client\_Imports.razor"
using PedidosBlazorWebAssembly.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Aplicada2\PedidosBlazorWebAssembly\Client\Pages\OrdenesPage.razor"
using PedidosBlazorWebAssembly.Shared.Models;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Orden")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/Orden/{OrdenId:int}")]
    public partial class OrdenesPage : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 137 "C:\Aplicada2\PedidosBlazorWebAssembly\Client\Pages\OrdenesPage.razor"
       

    [Parameter]
    public int OrdenId { get; set; }

    public int cantidadColocada { get; set; }
    public int productoSeleccionado { get; set; }
    public decimal costoEncontrado { get; set; }

    Ordenes ordenes = new Ordenes();
    List<Suplidores> listaSuplidores = new List<Suplidores>();
    List<Productos> listaProductos = new List<Productos>();

    protected override void OnInitialized()
    {
        Nuevo();
        /*if (OrdenId > 0)
        {
            var auxOrden = OrdenesBLL.Buscar(OrdenId);
            if (auxOrden != null)
                this.ordenes = auxOrden;
            else
                toast.ShowWarning("No encontrado.");
        }

        listaSuplidores = SuplidoresBLL.GetList(p => true);
        listaProductos = ProductosBLL.GetList(p => true);*/
    }

    private void Buscar()
    {
        /*var encontrado = OrdenesBLL.Buscar(ordenes.ordenId);
        if (encontrado != null)
        {
            this.ordenes = encontrado;
        }
        else
            toast.ShowWarning("No encontrado");*/

    }


    private void Nuevo()
    {
        this.ordenes = new Ordenes();
        cantidadColocada = 0;
        productoSeleccionado = 0;
        costoEncontrado = 0;

    }

    private void EncontrarCosto()
    {
        /*var auxProducto = ProductosBLL.Buscar(productoSeleccionado);
        if (auxProducto != null)
        {
            costoEncontrado = auxProducto.costo;
        }*/

    }

    private void Agregar()
    {
        /*if (productoSeleccionado == 0)
        {
            toast.ShowWarning("Tiene que seleccionar un producto.");
            return;
        }

        if (cantidadColocada <= 0)
        {
            toast.ShowWarning("La cantidad debe ser mayor a 0.");
            return;
        }
        else
        {
            this.ordenes.OrdenDetalles.Add(new OrdenesDetalle
            {
                ordenDetalleId = 0,
                ordenId = ordenes.ordenId,
                productoId = productoSeleccionado,
                costo = costoEncontrado,
                cantidad = cantidadColocada
            });

            productoSeleccionado = 0;
            costoEncontrado = 0;
            cantidadColocada = 0;

        }
        CalcularMonto();*/

    }

    /*private string GetProductoDescripcion(int id)
    {
        var auxProducto = ProductosBLL.Buscar(id);
        string descripcion = string.Empty;
        if (auxProducto != null)
        {
            descripcion = auxProducto.descripcion;
        }

        return descripcion;
    }*/

    private void CalcularMonto()
    {
        decimal total = 0;
        foreach (var item in ordenes.OrdenDetalles)
        {
            total += (item.costo * item.cantidad);
        }
        ordenes.monto = total;
    }

    private void EliminarOrdenDetalle(OrdenesDetalle detalle)
    {
        try
        {
            ordenes.OrdenDetalles.Remove(detalle);
            CalcularMonto();
        }
        catch (Exception)
        {

            throw;
        }
    }


    private void Guardar()
    {
        /*bool paso;
        if (ordenes.OrdenDetalles.Count == 0)
        {
            toast.ShowWarning("Tienes que agregar al menos un elemento a la lista", "Lista VacÃ­a!");
            return;
        }
        else
        {
            paso = OrdenesBLL.Guardar(ordenes);

            if (paso)
            {
                Nuevo();
                toast.ShowSuccess("Guardado correctamente");
            }
            else
            {
                toast.ShowError("No fue posible guardar");
            }
        }*/

    }

    private void Eliminar()
    {
        /*bool elimino;

        elimino = OrdenesBLL.Eliminar(ordenes.ordenId);

        if (elimino)
        {
            Nuevo();
            toast.ShowSuccess("Eliminado correctamente");
        }
        else
            toast.ShowError("No fue posible eliminar");*/
    }


#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
